{"version":3,"sources":["components/Header.js","components/Container.js","components/Table.js","utils/API.js","components/Search.js","components/Results.js","App.js","index.js"],"names":["Header","className","Container","props","children","Table","employees","matchSearch","sortedEmployees","flat","value","direction","sort","a","b","name","last","scope","onClick","reverseOrder","map","employee","imgSrc","picture","thumbnail","first","fullName","location","city","state","fullLocation","phoneNumber","phone","email","formattedBirthDate","moment","dob","date","format","src","alt","login","username","axios","get","Search","onSubmit","handleFormSubmit","type","placeholder","aria-label","onChange","handleInputChange","EmployeeResults","search","event","target","setState","searchEmployees","trim","preventDefault","formattedSearch","charAt","toUpperCase","slice","verifiedMatches","filter","includes","push","API","then","res","data","results","catch","err","console","log","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"yKAceA,MAZf,WACI,OACI,qBAAKC,UAAU,oCAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,oBAAIA,UAAU,6BAAd,gCACA,mBAAGA,UAAU,mBAAb,wH,uCCDDC,MAJf,SAAmBC,GACjB,OAAO,qBAAKF,UAAS,kBAAd,SAAoCE,EAAMC,Y,QCuGpCC,MAtGf,SAAeF,GAEX,IAAQG,EAA2BH,EAA3BG,UAAWC,EAAgBJ,EAAhBI,YAKfC,EAAkB,YAAID,GAAaE,OAsCvC,MAjCmB,KAAhBN,EAAMO,QACLF,EAAe,YAAOF,IAUF,cAApBH,EAAMQ,UACNH,EAAgBI,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAEE,KAAKC,KAAOF,EAAEC,KAAKC,MACb,EACDH,EAAEE,KAAKC,KAAOF,EAAEC,KAAKC,KACrB,EAEA,KAGY,eAApBb,EAAMQ,WACbH,EAAgBI,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAEE,KAAKC,KAAOF,EAAEC,KAAKC,MACb,EACDH,EAAEE,KAAKC,KAAOF,EAAEC,KAAKC,KACrB,EAEA,KAOf,cAAC,EAAD,UACI,qBAAKf,UAAU,mBAAf,SAEI,wBAAOA,UAAU,gCAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,oBAAIgB,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,SAAgB,wBAAQhB,UAAU,kBAAkBiB,QAASf,EAAMgB,aAAnD,oBAChB,oBAAIF,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,gCAGR,gCACKT,EAAgBY,KAAI,SAACC,GAMlB,IAAMC,EAASD,EAASE,QAAQC,UAEhC,EAAwBH,EAASN,KAAzBU,EAAR,EAAQA,MAAOT,EAAf,EAAeA,KACTU,EAAQ,UAAMD,EAAN,YAAeT,GAE7B,EAAwBK,EAASM,SAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACRC,EAAY,UAAMF,EAAN,aAAeC,GAE3BE,EAAcV,EAASW,MAEvBC,EAAQZ,EAASY,MAEjBC,EAAqBC,EAAOd,EAASe,IAAIC,MAAMC,OAAO,cAE5D,OACI,+BACA,oBAAIrB,MAAM,MAAV,SAAgB,qBAAKsB,IAAMjB,EAAQkB,IAAM,wBACzC,oBAAIvC,UAAY,eAAhB,SAAgCyB,IAChC,oBAAIzB,UAAY,eAAhB,SAAgC6B,IAChC,oBAAI7B,UAAY,eAAhB,SAAgC8B,IAChC,oBAAI9B,UAAY,eAAhB,SAAgCgC,IAChC,oBAAIhC,UAAY,eAAhB,SAAgCiC,MANrBb,EAASoB,MAAMC,uB,iBCnF3C,EACW,WAClB,OAAOC,IAAMC,IAJA,8DCeNC,MAff,SAAgB1C,GACZ,OACI,qBAAKF,UAAU,uEAAf,SACI,uBAAMA,UAAU,cAAc6C,SAAU3C,EAAM4C,iBAA9C,UACI,uBAAO9C,UAAU,uBACjB+C,KAAK,SACLC,YAAY,SACZC,aAAW,SACXC,SAAUhD,EAAMiD,oBAChB,wBAAQnD,UAAU,uCAAuC+C,KAAK,SAA9D,0BCoFDK,E,4MAzFbxB,MAAQ,CACNvB,UAAW,GACXgD,OAAQ,GACR/C,YAAa,GACbI,UAAW,a,EAYbyC,kBAAoB,SAAAG,GAClB,IAAM7C,EAAQ6C,EAAMC,OAAO9C,MAC3B,EAAK+C,SAAS,CAAEH,OAAQ5C,IACxB,EAAKgD,gBAAgBhD,EAAMiD,S,EAG7BZ,iBAAmB,SAAAQ,GACjBA,EAAMK,iBACN,EAAKF,gBAAgB,EAAK7B,MAAMyB,OAAOK,S,EAIzCD,gBAAkB,SAAAH,GACd,GAAIA,EAAO,CAIT,IAAIM,EAAkBN,EAAMO,OAAO,GAAGC,cAAgBR,EAAMS,MAAM,GAG9DC,EAAkB,GAIpB,EAAKpC,MAAMvB,UAAU4D,QAAO,SAAC7C,GAEzB,OAAIA,EAASN,KAAKU,MAAM0C,SAASN,IAAoBxC,EAASN,KAAKC,KAAKmD,SAASN,IAK7EI,EAAgBG,KAAK/C,GAGrB,EAAKoC,SAAS,CAAElD,YAAa,CAAC0D,KAExB,GAAN,OAAU5C,EAASN,KAAKU,MAAxB,YAAiCJ,EAASN,KAAKC,OAExC,2B,EAOvBG,aAAe,SAAAoC,GACiB,cAAzB,EAAK1B,MAAMlB,UACZ,EAAK8C,SAAS,CAAE9C,UAAW,eACM,eAAzB,EAAKkB,MAAMlB,WACnB,EAAK8C,SAAS,CAAE9C,UAAW,e,uDA1DjC,WAAqB,IAAD,OAClB0D,IACCC,MAAK,SAAAC,GAAG,OACL,EAAKd,SAAS,CAAEnD,UAAWiE,EAAIC,KAAKC,QAASlE,YAAagE,EAAIC,KAAKC,aAEtEC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAyD5B,WACE,OACE,gCACE,cAAC,EAAD,CACAjE,MAAOoE,KAAKjD,MAAMyB,OAClBF,kBAAmB0B,KAAK1B,kBACxBL,iBAAkB+B,KAAK/B,mBAEvB,cAAC,EAAD,CACAzC,UAAWwE,KAAKjD,MAAMvB,UACtBC,YAAauE,KAAKjD,MAAMtB,YACxBG,MAAOoE,KAAKjD,MAAMyB,OAClB3C,UAAWmE,KAAKjD,MAAMlB,UACtBQ,aAAc2D,KAAK3D,sB,GAnFG4D,aCQfC,MATf,WACE,OACA,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCHJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.81e22c67.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid bg-dark\">\n            <div className=\"container text-white\">\n                <h1 className=\"display-4 text-center mb-3\">Employee Directory</h1>\n                <p className=\"lead text-center\">An application that simulates a real-world employee\n                directory through utilizing the Random User API.</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container w-100`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./Container\";\nimport * as moment from 'moment';\n\nfunction Table(props) {\n\n    const { employees, matchSearch } = props;\n\n    // Sorted employees = an array of all employees that match the search (if specified)\n    // The array is flattened, meaning that the sub-array that was nested is\n    // flattened back into the parent array\n    let sortedEmployees = [...matchSearch].flat();\n\n    // If the search box is blank (if a user deleted a previous search)\n    // this will revert the employees listed back to the original list pulled from the API\n\n    if(props.value === \"\") {\n        sortedEmployees = [...employees];\n    }\n\n    // This sorting function works by comparing the last names to each other\n    // Two last names are passed in as arguments and compared against each other\n    // -1 = the first last name (a) should come before the second (b)\n    // 1 = the second last name (b) should come before the first (a)\n    // 0 = the last names are identical\n\n    // Switch from A-Z and Z-A\n    if (props.direction === \"Ascending\") {\n        sortedEmployees.sort((a, b) => {\n            if (a.name.last < b.name.last) {\n                return -1;\n            } else if (a.name.last > b.name.last) {\n                return 1;\n            } else {\n                return 0;\n            }\n        })\n    } else if (props.direction === \"Descending\") {\n        sortedEmployees.sort((a, b) => {\n            if (a.name.last > b.name.last) {\n                return -1;\n            } else if (a.name.last < b.name.last) {\n                return 1;\n            } else {\n                return 0;\n            }\n        })\n    }\n\n    return (\n\n        <Container>\n            <div className=\"table-responsive\">\n\n                <table className=\"table table-hover text-center\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Image</th>\n                            <th scope=\"col\"><button className=\"btn btn-primary\" onClick={props.reverseOrder}>Name</button></th>\n                            <th scope=\"col\">Location</th>\n                            <th scope=\"col\">Phone</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">Date of Birth</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {sortedEmployees.map((employee) => {\n\n                            // For each of the 100 items in the array (employee data), this is the\n                            // information that is pulled from the response and displayed in the table\n                            // Moment is used to format birthdates. \n\n                            const imgSrc = employee.picture.thumbnail;\n\n                            const { first, last } = employee.name;\n                            const fullName = `${first} ${last}`;\n\n                            const { city, state } = employee.location;\n                            const fullLocation = `${city}, ${state}`;\n\n                            const phoneNumber = employee.phone;\n\n                            const email = employee.email;\n\n                            const formattedBirthDate = moment(employee.dob.date).format('MM/DD/YYYY');\n\n                            return (\n                                <tr key = {employee.login.username}>\n                                <th scope=\"row\"><img src ={imgSrc} alt = \"Employee portrait\"/></th>\n                                <td className = \"align-middle\">{fullName}</td>\n                                <td className = \"align-middle\">{fullLocation}</td>\n                                <td className = \"align-middle\">{phoneNumber}</td>\n                                <td className = \"align-middle\">{email}</td>\n                                <td className = \"align-middle\">{formattedBirthDate}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n\n        </Container>\n    );\n}\n\nexport default Table;\n\n","import axios from \"axios\";\n\nconst directoryUrl = \"https://randomuser.me/api/?nat=au,ca,gb,us,nz&results=100\";\n\nexport default {\n    fetchRandomEmployees: function() {\n        return axios.get(directoryUrl);\n    }\n}","import React from \"react\";\n\nfunction Search(props) {\n    return (\n        <nav className=\"navbar navbar-light bg-light d-flex justify-content-center mt-3 mb-3\">\n            <form className=\"form-inline\" onSubmit={props.handleFormSubmit}>\n                <input className=\"form-control mr-sm-2\" \n                type=\"search\" \n                placeholder=\"Search\" \n                aria-label=\"Search\"\n                onChange={props.handleInputChange} />\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n        </nav>\n    );\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport API from \"../utils/API\";\nimport Search from \"./Search\";\n\nclass EmployeeResults extends Component {\n  state = {\n    employees: [],\n    search: \"\",\n    matchSearch: [],\n    direction: \"Ascending\"\n  };\n\n  componentDidMount() {\n    API.fetchRandomEmployees()\n    .then(res =>\n        this.setState({ employees: res.data.results, matchSearch: res.data.results })\n    )\n    .catch(err => console.log(err));\n \n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    this.setState({ search: value });\n    this.searchEmployees(value.trim());\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchEmployees(this.state.search.trim());\n\n  };\n\n  searchEmployees = event => {\n      if (event) {\n\n        // Capitalize the first letter of the string the user entered because\n        // that is how the names are in the Random User API\n        let formattedSearch = event.charAt(0).toUpperCase() + event.slice(1);\n\n        // A new array will hold all the matches, which will then be used to update state\n        let verifiedMatches = [];\n\n        // Employees are filtered to see if the first or last name includes\n        // what was entered into the search bar\n          this.state.employees.filter((employee) => {\n\n              if (employee.name.first.includes(formattedSearch) || employee.name.last.includes(formattedSearch) ) {\n\n                // All verified matches in the search are pushed to this array\n                // The entire employee object is pushed\n\n                  verifiedMatches.push(employee)\n\n                // State is updated to reflect the matches\n                  this.setState({ matchSearch: [verifiedMatches] })\n\n                  return `${employee.name.first} ${employee.name.last}`\n              } else {\n                  return \"No employees found.\";\n              }\n\n          })\n      }\n  }\n\n  reverseOrder = event => {\n      if(this.state.direction === \"Ascending\") {\n        this.setState({ direction: \"Descending\" })\n      } else if(this.state.direction === \"Descending\") {\n        this.setState({ direction: \"Ascending\" })\n      }\n  }\n\n  render() {\n    return (\n      <div>\n        <Search\n        value={this.state.search}\n        handleInputChange={this.handleInputChange}\n        handleFormSubmit={this.handleFormSubmit} \n        />\n        <Table\n        employees={this.state.employees}\n        matchSearch={this.state.matchSearch}\n        value={this.state.search}\n        direction={this.state.direction}\n        reverseOrder={this.reverseOrder}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EmployeeResults;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport EmployeeResults from \"./components/Results\";\n\nfunction App() {\n  return (\n  <div>\n    <Header />\n    <EmployeeResults />\n  </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}